########################################
#
#使用参考
#https://zhuanlan.zhihu.com/p/102977226
#http://yikun.github.io/2020/01/17/%E5%B7%A7%E7%94%A8Github-Action%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81%E5%88%B0Gitee/
#https://github.com/Yikun/hub-mirror-action/blob/master/README_CN.md
#https://help.github.com/cn/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
#
# 建议先在gitee上先导入github的项目，再编辑此文件增加同步功能。这样就能利用好gitee的强制同步功能了。
########################################
name: Sync Github to Gitee Daily

on:
  # push推送时触发
  push:
  # 定时任务触发
  schedule:
    # 每天北京时间 1 点跑
    # Runs at 17:00 UTC (1:00 AM Beijing) every day
    - cron:  '0 17 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Get Time and Key
        id: info
        run: |
          echo "time=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT;
          echo "key=${{github.repository_owner}}-${{github.repository}}" >> $GITHUB_OUTPUT;
        shell: bash

      - name: Cache src repos
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ${{ github.workspace }}/git-mirrors-cache
          key: ${{ runner.os }}-${{ steps.info.outputs.key }}-cache-${{ steps.info.outputs.time }}
          restore-keys: ${{ runner.os }}-${{ steps.info.outputs.key }}-cache-

      - name: Mirror the Github repos to Gitee
        uses: imnpc/git-mirrors@main
        with:
          # 需要被同步的源端账户名，如github/imnpc，表示Github的imnpc账户。
          src: github/${{ github.repository_owner }}
          # 扩展参数，源的 API tokens，支持 Gitee、Github
          # 若配置为 ${{ secrets.GITHUB_TOKEN }}，仅支持同步公开仓库，Github Action 会中自动注入 token
          # 若需要同步私有仓库，需配置 ${{ secrets.PERSONAL_ACCESS_TOKEN }}，PERSONAL_ACCESS_TOKEN 在这里创建
          src_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          # 需要同步到的 Gitee 用户（目的）看个人主页的地址
          dst: gitee/${{ secrets.GITEE_USER }}
          # 用于目的端上传代码的SSH key，用于上传代码
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
          # 创建仓库的API tokens， 用于自动创建不存在的仓库
          dst_token: ${{ secrets.GITEE_TOKEN }}
          # 账户类型 org（组织）或者 user（用户）, 默认 user
          account_type: user
          # 默认为account_type，源账户类型，可以设置为org（组织）或者user（用户）。
          # src_account_type: org
          # 默认为account_type，目的账户类型，可以设置为org（组织）或者user（用户）。
          # dst_account_type: org
          # 将代码缓存在指定目录，用于与 actions/cache配合以加速镜像过程
          cache_path: /github/workspace/git-mirrors-cache
          # 黑名单中的repos将不会被同步，如“repo1,repo2,repo3”
          black_list: "AutoApiSecret,go-common"
          # 仅同步白名单中的repos，如“repo1,repo2,repo3”
          #white_list: "w1,w2"
          # 只支持 ssh, 而且 dst_key 必须在 github 和 gitee 都配置好
          clone_style: ssh
          # 默认为false, 配置后，启用git push -f强制同步，注意：开启后，会强制覆盖目的端仓库。
          #force_update: true
          # 默认为false, 配置后，启用debug开关，会显示所有执行命令
          #debug: true
          # 默认为'30m', 用于设置每个git命令的超时时间，'600'=>600s, '30m'=>30 mins, '1h'=>1 hours
          #timeout: 30m
          # 源仓库映射规则，比如'A=>B, C=>CC', A会被映射为B，C会映射为CC，映射不具有传递性。主要用于源和目的仓库名不同的镜像。
          #mappings: "A=>B, C=>CC"+
          # 扩展参数，默认为 github.com,gitee.com
          #ssh_keyscans: github.com,gitee.com

      - name: Print cache path
        run: |
          ls -la ${{ github.workspace }}/git-mirrors-cache
